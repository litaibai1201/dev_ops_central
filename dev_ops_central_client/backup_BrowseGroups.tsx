import React, { useState, useEffect } from 'react';\nimport { \n  Card, \n  Table, \n  message,\n  Avatar,\n  Badge,\n  Button,\n  Modal,\n  Form,\n  Input,\n  Space,\n  Spin\n} from 'antd';\nimport {\n  TeamOutlined,\n  SendOutlined,\n  SearchOutlined\n} from '@ant-design/icons';\nimport { Group, User } from '../../types';\nimport type { ColumnsType } from 'antd/es/table';\nimport {\n  UserDisplay,\n  TableActions,\n  SearchAndFilterBar\n} from '../common';\n\ninterface BrowseGroupsProps {\n  user: User;\n  visible: boolean;\n  onCancel: () => void;\n}\n\nconst BrowseGroups: React.FC<BrowseGroupsProps> = ({ user, visible, onCancel }) => {\n  const [groups, setGroups] = useState<Group[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [joinModalVisible, setJoinModalVisible] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState<Group | null>(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [joinForm] = Form.useForm();\n\n  useEffect(() => {\n    if (visible) {\n      fetchAvailableGroups();\n    }\n  }, [visible]);\n\n  const fetchAvailableGroups = async () => {\n    setLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      // 模拟可申请加入的群组数据\n      const mockGroups: Group[] = [\n        {\n          id: '2',\n          name: '后端开发组',\n          description: '负责后端 API 开发和数据库设计',\n          ownerId: '3',\n          owner: {\n            id: '3',\n            username: 'backend_leader',\n            email: 'backend@company.com',\n            role: 'user',\n            createdAt: '2024-01-03',\n            updatedAt: '2024-01-03'\n          },\n          members: [\n            {\n              id: '3',\n              userId: '3',\n              groupId: '2',\n              user: {\n                id: '3',\n                username: 'backend_leader',\n                email: 'backend@company.com',\n                role: 'user',\n                createdAt: '2024-01-03',\n                updatedAt: '2024-01-03'\n              },\n              role: 'admin',\n              permissions: {\n                canApproveMembers: true,\n                canEditProject: true,\n                canManageMembers: true\n              },\n              joinedAt: '2024-01-03'\n            }\n          ],\n          projectCount: 2,\n          createdAt: '2024-01-03',\n          updatedAt: '2024-01-03'\n        },\n        {\n          id: '3',\n          name: 'UI/UX 设计组',\n          description: '负责产品界面设计和用户体验优化',\n          ownerId: '4',\n          owner: {\n            id: '4',\n            username: 'design_lead',\n            email: 'design@company.com',\n            role: 'user',\n            createdAt: '2024-01-05',\n            updatedAt: '2024-01-05'\n          },\n          members: [\n            {\n              id: '4',\n              userId: '4',\n              groupId: '3',\n              user: {\n                id: '4',\n                username: 'design_lead',\n                email: 'design@company.com',\n                role: 'user',\n                createdAt: '2024-01-05',\n                updatedAt: '2024-01-05'\n              },\n              role: 'admin',\n              permissions: {\n                canApproveMembers: true,\n                canEditProject: true,\n                canManageMembers: true\n              },\n              joinedAt: '2024-01-05'\n            }\n          ],\n          projectCount: 1,\n          createdAt: '2024-01-05',\n          updatedAt: '2024-01-05'\n        },\n        {\n          id: '4',\n          name: '测试团队',\n          description: '负责产品质量保证和自动化测试',\n          ownerId: '5',\n          owner: {\n            id: '5',\n            username: 'qa_manager',\n            email: 'qa@company.com',\n            role: 'user',\n            createdAt: '2024-01-07',\n            updatedAt: '2024-01-07'\n          },\n          members: [\n            {\n              id: '5',\n              userId: '5',\n              groupId: '4',\n              user: {\n                id: '5',\n                username: 'qa_manager',\n                email: 'qa@company.com',\n                role: 'user',\n                createdAt: '2024-01-07',\n                updatedAt: '2024-01-07'\n              },\n              role: 'admin',\n              permissions: {\n                canApproveMembers: true,\n                canEditProject: true,\n                canManageMembers: true\n              },\n              joinedAt: '2024-01-07'\n            }\n          ],\n          projectCount: 3,\n          createdAt: '2024-01-07',\n          updatedAt: '2024-01-07'\n        }\n      ];\n      \n      // 过滤掉用户已经是成员的群组\n      const availableGroups = mockGroups.filter(group => \n        !group.members.some(member => member.userId === user.id)\n      );\n      \n      setGroups(availableGroups);\n    } catch (error) {\n      message.error('获取群组列表失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleJoinRequest = (group: Group) => {\n    setSelectedGroup(group);\n    setJoinModalVisible(true);\n    joinForm.resetFields();\n  };\n\n  const handleSubmitJoinRequest = async (values: any) => {\n    try {\n      setSubmitLoading(true);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      message.success(`已向 \"${selectedGroup?.name}\" 发送入组申请`);\n      setJoinModalVisible(false);\n      setSelectedGroup(null);\n      joinForm.resetFields();\n    } catch (error) {\n      message.error('发送申请失败');\n    } finally {\n      setSubmitLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setJoinModalVisible(false);\n    setSelectedGroup(null);\n    joinForm.resetFields();\n  };\n\n  const filteredGroups = groups.filter(group =>\n    group.name.toLowerCase().includes(searchText.toLowerCase()) ||\n    group.description.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  const columns: ColumnsType<Group> = [\n    {\n      title: '群组信息',\n      key: 'info',\n      render: (_, record) => (\n        <div>\n          <div className=\"flex items-center mb-2\">\n            <Avatar \n              size=\"large\" \n              icon={<TeamOutlined />} \n              className=\"mr-3 bg-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-lg\">{record.name}</div>\n              <div className=\"text-sm text-gray-500\">{record.description}</div>\n            </div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      title: '群主',\n      dataIndex: 'owner',\n      key: 'owner',\n      render: (owner: User) => (\n        <UserDisplay \n          username={owner.username}\n          email={owner.email}\n          showCrown={true}\n        />\n      ),\n    },\n    {\n      title: '成员数量',\n      dataIndex: 'members',\n      key: 'memberCount',\n      render: (members: any[]) => (\n        <Badge count={members.length} showZero style={{ backgroundColor: '#52c41a' }} />\n      ),\n    },\n    {\n      title: '专案数量',\n      dataIndex: 'projectCount',\n      key: 'projectCount',\n      render: (count: number) => (\n        <Badge count={count} showZero style={{ backgroundColor: '#1890ff' }} />\n      ),\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      render: (date: string) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: '操作',\n      key: 'actions',\n      width: 120,\n      render: (_, record) => (\n        <Button \n          type=\"primary\" \n          icon={<SendOutlined />}\n          onClick={() => handleJoinRequest(record)}\n          size=\"small\"\n        >\n          申请加入\n        </Button>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Modal\n        title=\"浏览群组\"\n        open={visible}\n        onCancel={onCancel}\n        footer={[\n          <Button key=\"close\" onClick={onCancel}>\n            关闭\n          </Button>\n        ]}\n        width={1000}\n        destroyOnClose\n      >\n        <div className=\"mb-4\">\n          <SearchAndFilterBar\n            searchValue={searchText}\n            onSearchChange={setSearchText}\n            searchPlaceholder=\"搜索群组名称或描述...\"\n          />\n        </div>\n        \n        {loading ? (\n          <div className=\"text-center py-8\">\n            <Spin size=\"large\" />\n            <div className=\"mt-2 text-gray-500\">加载群组列表...</div>\n          </div>\n        ) : filteredGroups.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-gray-400 mb-2\">\n              <SearchOutlined style={{ fontSize: 48 }} />\n            </div>\n            <div className=\"text-gray-500\">\n              {searchText ? '没有找到匹配的群组' : '暂无可申请的群组'}\n            </div>\n          </div>\n        ) : (\n          <Table\n            columns={columns}\n            dataSource={filteredGroups}\n            rowKey=\"id\"\n            pagination={{\n              pageSize: 8,\n              showTotal: (total, range) => \n                `第 ${range[0]}-${range[1]} 条，共 ${total} 条`,\n            }}\n          />\n        )}\n      </Modal>\n\n      {/* 申请加入群组模态框 */}\n      <Modal\n        title={`申请加入 \"${selectedGroup?.name}\"`}\n        open={joinModalVisible}\n        onCancel={handleCancel}\n        footer={null}\n        width={500}\n        destroyOnClose\n      >\n        <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <Avatar \n              size=\"large\" \n              icon={<TeamOutlined />} \n              className=\"bg-blue-500\"\n            />\n            <div>\n              <h4 className=\"font-medium text-blue-800\">{selectedGroup?.name}</h4>\n              <p className=\"text-sm text-blue-600 mt-1\">{selectedGroup?.description}</p>\n              <div className=\"flex items-center space-x-4 mt-2 text-xs text-blue-500\">\n                <span>成员: {selectedGroup?.members.length} 人</span>\n                <span>专案: {selectedGroup?.projectCount} 个</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Form\n          form={joinForm}\n          layout=\"vertical\"\n          onFinish={handleSubmitJoinRequest}\n        >\n          <Form.Item\n            name=\"message\"\n            label=\"申请理由\"\n            rules={[\n              { required: true, message: '请输入申请理由' },\n              { min: 10, message: '申请理由至少10个字符' },\n              { max: 200, message: '申请理由不能超过200个字符' }\n            ]}\n          >\n            <Input.TextArea \n              placeholder=\"请简要说明您希望加入该群组的原因，以及您能为团队带来什么价值...\"\n              rows={4}\n            />\n          </Form.Item>\n\n          <Form.Item className=\"mb-0\">\n            <Space className=\"w-full justify-end\">\n              <Button onClick={handleCancel}>\n                取消\n              </Button>\n              <Button \n                type=\"primary\" \n                htmlType=\"submit\" \n                icon={<SendOutlined />}\n                loading={submitLoading}\n              >\n                发送申请\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default BrowseGroups;\n